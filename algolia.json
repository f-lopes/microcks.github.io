[{"authors":null,"categories":null,"date":1593043200,"description":"","dir":"resources/media/","expirydate":-62135596800,"fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1593043200,"objectID":"9a03a2c0093bf2e76aa318c35a995236","permalink":"https://microcks.io/resources/media/media-resources/","publishdate":"2020-06-25T00:00:00Z","readingtime":1,"relpermalink":"/resources/media/media-resources/","section":"resources","summary":"Here are a few assets in case you want to show off your support for Microcks, integration to Microcks, or want to link back to us. Please feel free to borrow these!\nLogos Simple logo, blue and light variants with transparent background:\n     Simple logo with name stacked, blue and light variants with transparent background:\n     Horizontal logo with name, blue and light variants with transparent background:","tags":null,"title":"Media resources","type":"resources","url":"/resources/media/media-resources/","weight":10,"wordcount":168},{"authors":null,"categories":null,"date":1574035200,"description":"","dir":"documentation/administrating/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1630368000,"objectID":"1a26561a91e15774c1180600f80eb823","permalink":"https://microcks.io/documentation/administrating/users/","publishdate":"2019-11-18T00:00:00Z","readingtime":4,"relpermalink":"/documentation/administrating/users/","section":"documentation","summary":"Introduction Since its inception, Microcks relies on a third party component named Keycloak for managing security related topics like users identification, users authentication and habilitations as well as API endpoints protection. Keycloak is also used for providing service accounts authentication and authorization. This topic is detailed in a dedicated page.\nBasic installation of Microcks (through Kubernetes Operator, Helm Chart, OpenShift template or Docker-compose) comes with its own Keycloak instance embedding the definitions of Microcks needed components into what is called a realm.","tags":null,"title":"Managing Users","type":"documentation","url":"/documentation/administrating/users/","weight":10,"wordcount":791},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1687392000,"objectID":"25df700827b5b23176f8adcaaa995a29","permalink":"https://microcks.io/documentation/installing/kubernetes/","publishdate":"2019-09-01T00:00:00Z","readingtime":2,"relpermalink":"/documentation/installing/kubernetes/","section":"documentation","summary":"Instructions One easy way of installing Microcks is via a Helm Chart. Kubernetes version 1.17 or greater is required. It is assumed that you have some kind of Kubernetes cluster up and running available. This can take several forms depending on your environment and needs:\n Lightweight Minikube on your laptop, see Minikube project page, A Google Cloud Engine account in the cloud, see how to start a Free trial, Any other Kubernetes distribution provider.","tags":null,"title":"Installing on Kube using Helm","type":"documentation","url":"/documentation/installing/kubernetes/","weight":10,"wordcount":401},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1689552000,"objectID":"08d2fe2662fc2d61c29ffa9b9ad96e9f","permalink":"https://microcks.io/documentation/automating/service-account/","publishdate":"2019-09-01T00:00:00Z","readingtime":3,"relpermalink":"/documentation/automating/service-account/","section":"documentation","summary":"Microcks Service Accounts Introduction Microcks is using OpenId Connect and OAuth 2.0 bearer tokens to secure its frontend and API access. While this is very convenient for interactive users, it may be unpracticable for machine-to-machine authentication when you want to interact with Microcks from a robot, CI/CD pipeline or simple CLI tool. For that, we decided to implement the simple OAuth 2.0 Client Credentials Grant in addition of other grants. This authentication is implemented using Service Accounts clients defined into the Realm configuration in Keycloak.","tags":null,"title":"Microcks Service Accounts","type":"documentation","url":"/documentation/automating/service-account/","weight":10,"wordcount":629},{"authors":null,"categories":null,"date":1698278400,"description":"","dir":"documentation/administrating/","expirydate":-62135596800,"fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1698278400,"objectID":"9b7e7d26f050207d576503b8efebbe45","permalink":"https://microcks.io/documentation/administrating/externals/","publishdate":"2023-10-26T00:00:00Z","readingtime":1,"relpermalink":"/documentation/administrating/externals/","section":"documentation","summary":"Introduction Microcks is able to run Groovy scripts contained in your API mocks. Your scripts may need external dependencies that are not present in Microcks. In the next section, you will find two approaches depending on whether you are using docker-compose or pure Kubernetes installation to provide such dependencies for your scripts.\nDocker-compose method  The solution is similar for Podman-compose\n  Put your Jar files into a dedicated folder (i.","tags":null,"title":"External Dependencies","type":"documentation","url":"/documentation/administrating/externals/","weight":20,"wordcount":211},{"authors":null,"categories":null,"date":1581379200,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1619568000,"objectID":"e6f52adad7f0a5dd75584af0a5c44287","permalink":"https://microcks.io/documentation/installing/operator/","publishdate":"2020-02-11T00:00:00Z","readingtime":5,"relpermalink":"/documentation/installing/operator/","section":"documentation","summary":"Overview Operators are next-gen installer, maintainer and life-cycle manager for Kubernetes native applications. Operators are a Kubernetes native piece of software (aka Kube controller) that manages specific Custom Resources defining their domain of expertise. Microcks provide an Operator that was developed using the Operator Framework SDK and that is distributed through OperatorHub.io.\nAt the time of writing, Microcks only defines one customer resource that is called the MicrocksInstall: a description of the instance configuration you want to deploy.","tags":null,"title":"Installing on Kube using Operator","type":"documentation","url":"/documentation/installing/operator/","weight":20,"wordcount":985},{"authors":null,"categories":null,"date":1574035200,"description":"","dir":"documentation/administrating/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1574121600,"objectID":"d73522cf3ec7dd7679d69ff7bea5a162","permalink":"https://microcks.io/documentation/administrating/secrets/","publishdate":"2019-11-18T00:00:00Z","readingtime":2,"relpermalink":"/documentation/administrating/secrets/","section":"documentation","summary":"Introduction Starting with Microcks version 0.7.0, we add the ability to manage some forms of Secrets in order to access private HTTP(S) repositories su as Git ones.\nSecrets can only be managed by Microcks administrator - we mean people having the administrator role assigned. If you need further information on how to manage users and roles, please check here. Secrets management is simply a thumbnail with the Administration page that is available from the vertical menu on the left once logged in as administrator.","tags":null,"title":"External Secrets","type":"documentation","url":"/documentation/administrating/secrets/","weight":20,"wordcount":402},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1637539200,"objectID":"d7de4d69079cb3669b228b445759f8f1","permalink":"https://microcks.io/documentation/automating/jenkins/","publishdate":"2019-09-01T00:00:00Z","readingtime":6,"relpermalink":"/documentation/automating/jenkins/","section":"documentation","summary":"Microcks Jenkins plugin Microcks provides a Jenkins plugin that you may find in its own GitHub repository. This plugin allows your Jenkins builds and jobs to import API specifications into Microcks and to launch tests runner for validating the Service or API you just deployed. See this page on Tests for more informations on running tests with Microcks.\nUsing this plugin, it is really easy to keep Microcks in-sync withe your API specifications and integrate tests stages within your Continuous Integration / Deployment / Delivery pipeline.","tags":null,"title":"Integrating Microcks from Jenkins","type":"documentation","url":"/documentation/automating/jenkins/","weight":20,"wordcount":1222},{"authors":null,"categories":null,"date":1662681600,"description":"","dir":"documentation/using/advanced/","expirydate":-62135596800,"fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1662681600,"objectID":"e8da23c1ab7c6c0feadb21be9a6f8f7d","permalink":"https://microcks.io/documentation/using/advanced/monitoring/","publishdate":"2022-09-09T00:00:00Z","readingtime":2,"relpermalink":"/documentation/using/advanced/monitoring/","section":"documentation","summary":"Introduction As a cloud-native application, we take great care of providing observability on what\u0026rsquo;s going on within a Microcks instance. We dissociate two kinds of metrics: the Functional metrics are related to all the domain objects you may find in Microcks and the Technical metrics that are related to resource consumption and performance.\nFunctional metrics Microcks provides functional metrics directly from within its own API. This API will give you visibility on how you use the platform to invoke mocks, execute tests and enhance or degrade quality metrics.","tags":null,"title":"Monitoring \u0026 Observability","type":"documentation","url":"/documentation/using/advanced/monitoring/","weight":30,"wordcount":251},{"authors":null,"categories":null,"date":1649203200,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1649203200,"objectID":"73e4f4d89dc2ca23bf0e852ebb0b1d93","permalink":"https://microcks.io/documentation/using/swagger/","publishdate":"2022-04-06T00:00:00Z","readingtime":4,"relpermalink":"/documentation/using/swagger/","section":"documentation","summary":"Overview Introduction Despite its 7+ years old, Swagger (aka as OpenAPI v2) is still a very popular specification format for REST APIs. Eventhough its OpenAPI v3 descendant is now well established and provides more comprehensive way of describing things, Swagger v2 is still very present.\nStarting with version 1.5.1, Microcks is supporting Sxwagger mocking and testing thanks to the new multi-artifacts support feature. In order to use Swagger in Microcks, you will need 2 artifacts for each API definition:","tags":null,"title":"Swagger Mocking and Testing","type":"documentation","url":"/documentation/using/swagger/","weight":30,"wordcount":642},{"authors":null,"categories":null,"date":1645574400,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1645574400,"objectID":"4e6fe447e33901adb907757ee8d273f8","permalink":"https://microcks.io/documentation/guides/openapi-101/","publishdate":"2022-02-23T00:00:00Z","readingtime":8,"relpermalink":"/documentation/guides/openapi-101/","section":"documentation","summary":"Overview This guide is a step-by-step walkthrough on how to use OpenAPI specification to specify your mocks for your API. This guide is a practical complement to OpenAPI usage for Microcks that brings more details on theory and conventions being used.\nIn this guide, we will go through a practical example based on the famous PetStore API. We\u0026rsquo;ll build the reference petstore-1.0.0-openapi.yaml file by increment, highlighting the details to get you starting with mocking OpenAPI on Microcks.","tags":null,"title":"OpenAPI Mocking 101","type":"documentation","url":"/documentation/guides/openapi-101/","weight":30,"wordcount":1650},{"authors":null,"categories":null,"date":1641340800,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1645574400,"objectID":"e87dbfa7a552a5cb7bab2a9384515cba","permalink":"https://microcks.io/documentation/using/graphql/","publishdate":"2022-01-05T00:00:00Z","readingtime":5,"relpermalink":"/documentation/using/graphql/","section":"documentation","summary":"Overview Introduction GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools. So that\u0026rsquo;s a perfect fit for Microcks Service | API model and features 😉","tags":null,"title":"GraphQL Mocking and Testing","type":"documentation","url":"/documentation/using/graphql/","weight":30,"wordcount":1046},{"authors":null,"categories":null,"date":1632787200,"description":"","dir":"documentation/using/advanced/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1632787200,"objectID":"7df03d1158d37460bf95224be2dabc45","permalink":"https://microcks.io/documentation/using/advanced/metadata/","publishdate":"2021-09-28T00:00:00Z","readingtime":3,"relpermalink":"/documentation/using/advanced/metadata/","section":"documentation","summary":"Introduction Some Microcks mocks specific metadata or properties cannot be fully deduced from common attributes coming from OpenAPI or AsyncAPI. Thus we should rely on default values can be later overwritten by manager within Microcks either using the UI or through the Microcks API. That\u0026rsquo;s the reason why we introduced OpenAPI extensions and AsyncAPI extensions starting with Microcks 1.4.0 release.\nBut sometimes you don\u0026rsquo;t want to add some x-microcks extensions attributes into AsyncAPI / OpenAPI document OR you\u0026rsquo;d need to specify these metadata and properties for some other artifact types like Protobuf + Postman collection for GRPC mocking for instance 😉.","tags":null,"title":"Microcks APIMetadata","type":"documentation","url":"/documentation/using/advanced/metadata/","weight":30,"wordcount":461},{"authors":null,"categories":null,"date":1624924800,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1645574400,"objectID":"311bf0d07b71a6e7d8a0ec644b67910f","permalink":"https://microcks.io/documentation/using/grpc/","publishdate":"2021-06-29T00:00:00Z","readingtime":5,"relpermalink":"/documentation/using/grpc/","section":"documentation","summary":"Overview Introduction In gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. So that\u0026rsquo;s a perfect fit for Microcks Service | API model and features 😉","tags":null,"title":"gRPC Mocking and Testing","type":"documentation","url":"/documentation/using/grpc/","weight":30,"wordcount":889},{"authors":null,"categories":null,"date":1614211200,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1687305600,"objectID":"1925774f80a4817ed548bc3b73c59f91","permalink":"https://microcks.io/documentation/installing/podman-compose/","publishdate":"2021-02-25T00:00:00Z","readingtime":3,"relpermalink":"/documentation/installing/podman-compose/","section":"documentation","summary":"Podman Compose is a tool for easily testing and running multi-container applications. Microcks offers a simple way to set up the minimal required containers to have a functional environment on your local computer. This procedure has been successfully tested with Podman 2.1.1 onto Fedora 33+ and should be OK on CentOS Stream 8+ and RHEL 8+ distributions too.\nUsage To get started, make sure you first have the Podman and the Podman Compose packages installed on your system.","tags":null,"title":"Installing with podman-compose","type":"documentation","url":"/documentation/installing/podman-compose/","weight":30,"wordcount":466},{"authors":null,"categories":null,"date":1613260800,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1613347200,"objectID":"a03248363697abeccf4dc4ab954c0082","permalink":"https://microcks.io/documentation/guides/mqtt-support/","publishdate":"2021-02-15T00:00:00Z","readingtime":7,"relpermalink":"/documentation/guides/mqtt-support/","section":"documentation","summary":"Overview This guide is a walkthrough on how to use the Message Queuing Telemetry Transport (MQTT) protocol with Microcks. MQTT is a standard messaging protocol for the Internet of Things (IoT). It is used today in a wide variety of industries, such as automotive, manufacturing, telecommunications, oil and gas, etc.\nStarting with the 1.2.0 release of Microcks, we support MQTT as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a MQTT broker for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any MQTT broker in your organization to check that flowing messages are compliant to the schema described within your specification.","tags":null,"title":"MQTT Mocking and Testing","type":"documentation","url":"/documentation/guides/mqtt-support/","weight":30,"wordcount":1355},{"authors":null,"categories":null,"date":1612915200,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":2200,"keywords":null,"kind":"page","lang":"en","lastmod":1613088000,"objectID":"099ecbfa25e85016262ae2c1f759eb73","permalink":"https://microcks.io/documentation/guides/avro-messaging/","publishdate":"2021-02-12T00:00:00Z","readingtime":11,"relpermalink":"/documentation/guides/avro-messaging/","section":"documentation","summary":"Overview This guide is a walkthrough the different steps to have in mind when using Microcks for mocking and testing Avro encoding on top of Apache Kafka. You\u0026rsquo;ll see how Microcks can speed-up the sharing of Avro schema to consumers using a Schema Registry and we will check how Microcks can detect drifts between expected Avro format and the one really used.\nStarting with the 1.2.0 release of Microcks, we support Avro as an encoding format for mocking and testing asynchronous and event-driven APIs through AsyncAPI.","tags":null,"title":"Kafka, Avro and Schema Registry","type":"documentation","url":"/documentation/guides/avro-messaging/","weight":30,"wordcount":2176},{"authors":null,"categories":null,"date":1603065600,"description":"","dir":"documentation/","expirydate":-62135596800,"fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1701302400,"objectID":"33256a5f5925f3299099017f02e6bcb1","permalink":"https://microcks.io/documentation/getting-started-tests/","publishdate":"2020-10-19T00:00:00Z","readingtime":5,"relpermalink":"/documentation/getting-started-tests/","section":"documentation","summary":"Getting started (continue) with Tests Now that you have finished the Getting started guide, you should have a Microcks installation up-and-running and filled with some samples from the Microcks repository. The goal of this page is to show you how you can use Microcks to achieve Contract Testing for your API, either manually from the UI or in an automated way using the CLI tooling.\nIf you have not done it in the previous step, you will need to load one of Microcks samples: the Pastry API.","tags":null,"title":"Getting started with Tests","type":"documentation","url":"/documentation/getting-started-tests/","weight":30,"wordcount":1047},{"authors":null,"categories":null,"date":1596240000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1686096000,"objectID":"e5ae71ffbac3e34c7aaeb685d0e14f80","permalink":"https://microcks.io/documentation/using/asyncapi/","publishdate":"2020-08-05T00:00:00Z","readingtime":5,"relpermalink":"/documentation/using/asyncapi/","section":"documentation","summary":"Overview Introduction AsyncAPI is an open source initiative that seeks to improve the current state of Event-Driven Architectures (EDA). Its long-term goal is to make working with EDA’s as easy as it is to work with REST APIs. That goes from documentation to code generation, from discovery to event management. Most of the processes you apply to your REST APIs nowadays would be applicable to your event-driven/asynchronous APIs too. So Microcks has support for AsyncAPI too 😉!","tags":null,"title":"AsyncAPI Mocking and Testing","type":"documentation","url":"/documentation/using/asyncapi/","weight":30,"wordcount":977},{"authors":null,"categories":null,"date":1584835200,"description":"","dir":"documentation/using/advanced/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1630368000,"objectID":"b6ae687b3cd13dbf251613185739febd","permalink":"https://microcks.io/documentation/using/advanced/organizing/","publishdate":"2020-03-22T00:00:00Z","readingtime":5,"relpermalink":"/documentation/using/advanced/organizing/","section":"documentation","summary":"Introduction You can manage labels upon APIs \u0026amp; Services present into your Microcks repository.\nGenerally speaking, labels are key/value pairs that are attached to objects, such as APIs \u0026amp; Services or Importer Jobs. Labels are intended to be used to specify identifying attributes of objects that are meaningful and relevant to your business or organization, but do not directly imply semantics to the core system. Labels can be used to organize and to select subsets of APIs \u0026amp; Services.","tags":null,"title":"Organizing repository","type":"documentation","url":"/documentation/using/advanced/organizing/","weight":30,"wordcount":853},{"authors":null,"categories":null,"date":1583193600,"description":"","dir":"documentation/using/advanced/","expirydate":-62135596800,"fuzzywordcount":1800,"keywords":null,"kind":"page","lang":"en","lastmod":1698278400,"objectID":"ac3f78f0752dedd77270242995d3597f","permalink":"https://microcks.io/documentation/using/advanced/dispatching/","publishdate":"2020-03-03T00:00:00Z","readingtime":9,"relpermalink":"/documentation/using/advanced/dispatching/","section":"documentation","summary":"Introduction As explained into Using exposed mocks, Microcks is using Dispatcher and Dispatching Rules for finding an appropriate response to return when receiving a mock request. When importing a new Service or API, Microcks is indeed looking at the variable parts between the different samples of a same operation to infer those two elements.\nHowever in some cases, this could not be enough and it will be useful to override these deduced values.","tags":null,"title":"Dispatcher \u0026 dispatching rules","type":"documentation","url":"/documentation/using/advanced/dispatching/","weight":30,"wordcount":1724},{"authors":null,"categories":null,"date":1582675200,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1600,"keywords":null,"kind":"page","lang":"en","lastmod":1626393600,"objectID":"eabcd6a6a922ae2a6b0de4d7927572a4","permalink":"https://microcks.io/documentation/using/importers/","publishdate":"2020-02-26T00:00:00Z","readingtime":8,"relpermalink":"/documentation/using/importers/","section":"documentation","summary":"Introduction Once you get your Microcks instance up and running, the next step is to start adding some Services or APIs into its internal repository. We\u0026rsquo;ve seen in this Getting Started section how to quickly load samples into the repository. This page will take you through a complete explanation of supported formats and the import mechanisms present in Microcks.\nSupported formats As previously introduced, Microcks \u0026ldquo;turns your API contract into live mocks in seconds\u0026rdquo; - the noticeable part of this sentence being API contract.","tags":null,"title":"Importing Services \u0026 APIs","type":"documentation","url":"/documentation/using/importers/","weight":30,"wordcount":1567},{"authors":null,"categories":null,"date":1581379200,"description":"","dir":"documentation/using/advanced/","expirydate":-62135596800,"fuzzywordcount":1900,"keywords":null,"kind":"page","lang":"en","lastmod":1672099200,"objectID":"bed70cb912a831acb676606ccfbd4ea9","permalink":"https://microcks.io/documentation/using/advanced/templates/","publishdate":"2020-02-11T00:00:00Z","readingtime":9,"relpermalink":"/documentation/using/advanced/templates/","section":"documentation","summary":"Introduction Whilst we deeply think that \u0026ldquo;real-world\u0026rdquo; static values for request/response samples are crucial in order to fully understand the business usages and expectations of an API, we have to admit that it is more than often useful to introduce some kind of dynamically generated content for response.\nThose use-case encompass:\n random numbers that may be defined in a range, today\u0026rsquo;s date or today\u0026rsquo;s + an amount of time (for validity date for example), response part expressed from request part (body part, header, query param)  Thus, we introduced in Microcks 0.","tags":null,"title":"Templating mock responses","type":"documentation","url":"/documentation/using/advanced/templates/","weight":30,"wordcount":1895},{"authors":null,"categories":null,"date":1576108800,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1576195200,"objectID":"227d2c3ec2c5595a21d3725ba859bfe2","permalink":"https://microcks.io/documentation/using/advanced/","publishdate":"2019-12-13T00:00:00Z","readingtime":3,"relpermalink":"/documentation/using/advanced/","section":"documentation","summary":"Content negocation in REST mocks Microcks mocks engine supports Content Negotiation for REST APIs based on Accept HTTP header.\nSo suppose you have defined 2 representations for the same example of a GET /pastry/{name} operation into your API contract:\n One describing a JSON response like below   Another describing a XML response like below  Both samples match the same dispatch criterion that is the name part of the URI.","tags":null,"title":"Advanced topics","type":"documentation","url":"/documentation/using/advanced/","weight":30,"wordcount":449},{"authors":null,"categories":null,"date":1574035200,"description":"","dir":"documentation/administrating/","expirydate":-62135596800,"fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1574121600,"objectID":"d3e2510384c600f8cd8313d401f192ba","permalink":"https://microcks.io/documentation/administrating/snapshots/","publishdate":"2019-11-18T00:00:00Z","readingtime":2,"relpermalink":"/documentation/administrating/snapshots/","section":"documentation","summary":"Introduction Microcks allows users to export a part of its database as a Snapshot and import such a Snapshot within another instance. Such Snapshots are not complete database exports because they only integrate the Services \u0026amp; APIs definitions parts. As an example, they do not embed all the tests runs and analytics data.\nSnapshots are lightweight structures that can be used to:\n easily exchange a set of Services \u0026amp; APIs definition with another instance of Microcks, easily setup a new Microcks instance dedicated for mocking a functionnal subsystem - optionally with different configured response times for simulating a real behaviour, easily backup your instance if you do not bother loosing tests runs and analytics data  Snapshots can only be managed by Microcks administrator - we mean people having the administrator role assigned.","tags":null,"title":"Repository Snapshots","type":"documentation","url":"/documentation/administrating/snapshots/","weight":30,"wordcount":317},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1662422400,"objectID":"b835aeba1756d94abb40eab9aba28807","permalink":"https://microcks.io/documentation/automating/cli/","publishdate":"2019-09-01T00:00:00Z","readingtime":2,"relpermalink":"/documentation/automating/cli/","section":"documentation","summary":"Microcks CLI microcks-cli is a command-line tool for interacting with Microcks server APIs. It allows to launch tests or import API artifacts with minimal dependencies. It is managed and released independently of the core Microcks server components within its own GitHub repository.\nThe CLI makes usage of Microcks Service Account so it\u0026rsquo;s definitely worth the read 😉\n Starting with release 0.5.2, the CLI also supports non-authenticated mode when Microcks is deployed in dev mode without Keycloak.","tags":null,"title":"CLI for Microcks","type":"documentation","url":"/documentation/automating/cli/","weight":30,"wordcount":333},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1567382400,"objectID":"f3b6ca99428a74eaefa63a044a1aef32","permalink":"https://microcks.io/documentation/using/alternatives/","publishdate":"2019-09-01T00:00:00Z","readingtime":4,"relpermalink":"/documentation/using/alternatives/","section":"documentation","summary":"Microcks vs. SoapUI Scope \u0026amp; Audience SoapUI is one of the oldest tool in the area but also one of the most popular. We like SoapUI for being simple to use and of great value because it lets functional experts to easily edit requests and responses samples. Specially when it relates to SOAP WebServices, SoapUI offers wizards, templates and validation that make correct editing of such samples a breeze. That\u0026rsquo;s why we currently rely on SoapUI for providing the contract artifacts as an input to Microcks.","tags":null,"title":"Comparison to alternatives","type":"documentation","url":"/documentation/using/alternatives/","weight":30,"wordcount":797},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1567382400,"objectID":"b3c4f930b1054a613ae1b26063fa87f8","permalink":"https://microcks.io/documentation/using/dynamic/","publishdate":"2019-09-01T00:00:00Z","readingtime":6,"relpermalink":"/documentation/using/dynamic/","section":"documentation","summary":"Creating direct API mocks Eventhough Microcks promotes a contract first approach for defining mocks, in real-life it may be difficult starting that way without a great maturity on API and Service contracts. You often need to play a bit with a fake API to really figure out their needs and how you should then design API contract. In order to help with this situation, Microcks offers the ability to dynamically generate an API that you may use as a sandbox.","tags":null,"title":"Getting direct API","type":"documentation","url":"/documentation/using/dynamic/","weight":30,"wordcount":1125},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1701302400,"objectID":"aa094c77936825fab50597a2b0535504","permalink":"https://microcks.io/documentation/getting-started/","publishdate":"2019-09-01T00:00:00Z","readingtime":6,"relpermalink":"/documentation/getting-started/","section":"documentation","summary":"Quickstart The easiest way to get started is using Docker Compose to start with minimal requirements. Make sure you have Docker installed on your system.\nIn your terminal issue the following commands:\n  Clone this repository.\ngit clone https://github.com/microcks/microcks.git --depth 10   Change to the install folder\ncd microcks/install/docker-compose   Spin up the containers\ndocker-compose up -d   This will start the necessary containers and setup a simple environment for you to use.","tags":null,"title":"Getting started","type":"documentation","url":"/documentation/getting-started/","weight":30,"wordcount":1165},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":400,"keywords":null,"kind":"page","lang":"en","lastmod":1687305600,"objectID":"15fe2d9e87ef96fc4e249195d6ef08c8","permalink":"https://microcks.io/documentation/installing/docker-compose/","publishdate":"2019-09-01T00:00:00Z","readingtime":2,"relpermalink":"/documentation/installing/docker-compose/","section":"documentation","summary":"Docker Compose is a tool for easily testing and running multi-container applications. Microcks offers a simple way to set up the minimal required containers to have a functional environment on your local computer.\nUsage To get started, make sure you have Docker installed on your system.\nIn your terminal issue the following commands:\n  Clone this repository.\ngit clone https://github.com/microcks/microcks.git --depth 10   Change to the install folder","tags":null,"title":"Installing with docker-compose","type":"documentation","url":"/documentation/installing/docker-compose/","weight":30,"wordcount":348},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1645574400,"objectID":"f15fc0087f48d3f710b676bb37b7d581","permalink":"https://microcks.io/documentation/using/openapi/","publishdate":"2019-09-01T00:00:00Z","readingtime":4,"relpermalink":"/documentation/using/openapi/","section":"documentation","summary":"Overview Introduction As OpenAPI emerges as an Open standard and provides way of defining Example Objects, Microcks provides direct support for OpenAPI 3.0 and 3.1.\nWith this feature, you are able to directly import your OpenAPI specification as a Job within Microcks. Then, it directly discover service definition as well as request/response samples defined as OpenAPI examples. If your specification embeds a JSON or OpenAPI schema definition for your custom datatypes, Microcks will use it for validating received response payload during tests when using the OPEN_API_SCHEMA strategy.","tags":null,"title":"OpenAPI Mocking and Testing","type":"documentation","url":"/documentation/using/openapi/","weight":30,"wordcount":813},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1702944000,"objectID":"aa1792b029ec0c5cc986ecc91aecf601","permalink":"https://microcks.io/documentation/using/postman/","publishdate":"2019-09-01T00:00:00Z","readingtime":6,"relpermalink":"/documentation/using/postman/","section":"documentation","summary":"Overview Pre-requisites Microcks has been tested with latest version of Postman and uses the Collection v2 format as input artifacts holding all your API mocks and tests definitions. Version 1 of the Collection format is actually not supported because it is not extensible and it is simply not where the community is heading.\nSteps for creating a repository In order to create a tests and mocks repository using Postman, you\u0026rsquo;ll need to follow the steps below:","tags":null,"title":"Postman usage for Microcks","type":"documentation","url":"/documentation/using/postman/","weight":30,"wordcount":1172},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1677110400,"objectID":"c512b730b367b2fa12875e5a98a28ce8","permalink":"https://microcks.io/documentation/using/soapui/","publishdate":"2019-09-01T00:00:00Z","readingtime":5,"relpermalink":"/documentation/using/soapui/","section":"documentation","summary":"Overview Pre-requisites Microcks has been developed and tested with SoapUI version 5.x. It is recommend that you use a compatible version of this tool for editing your tests and mocks repository.\nSteps for creating a repository In order to create a tests and mocks repository using SoapUI, you\u0026rsquo;ll need to follow the steps below:\n Initialize a SoapUI project that will hold the repository, Create sample Tests Requests (and optionally the associated tests assertions), Create sample Mocks Responses, Define dispatching rules that describe how requests and responses are associated together, Save the project into your SCM repository.","tags":null,"title":"SoapUI Mocking and Testing","type":"documentation","url":"/documentation/using/soapui/","weight":30,"wordcount":1062},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":1900,"keywords":null,"kind":"page","lang":"en","lastmod":1696896000,"objectID":"d797531bb8b8e74f5c7f78024f39ebf6","permalink":"https://microcks.io/documentation/using/tests/","publishdate":"2019-09-01T00:00:00Z","readingtime":9,"relpermalink":"/documentation/using/tests/","section":"documentation","summary":"Introduction It is likely you experienced the painful situation of deploying to production only to find out that an API service you integrate with has broken the contract. How can we effectively ensure this does not happen?\nMicrocks offers mocks but can also be used for Contract conformance testing of API or services being under development. You spend a lot of time describing request/response pairs and matching rules: it would be a shame not to use this sample as test cases once the development is on its way!","tags":null,"title":"Testing with Microcks","type":"documentation","url":"/documentation/using/tests/","weight":30,"wordcount":1804},{"authors":null,"categories":null,"date":1567296000,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1662508800,"objectID":"4fe3a72ba961525d860f227c41fbe57d","permalink":"https://microcks.io/documentation/using/mocks/","publishdate":"2019-09-01T00:00:00Z","readingtime":4,"relpermalink":"/documentation/using/mocks/","section":"documentation","summary":"Using exposed mocks Getting info on microservices mocks Well, now that you have installed Microcks, created your own API/Service repository using OpenAPI, AsyncAPI, gRPC, GraphQL, SoapUI or Postman and discovered how to import and browse content, you are ready to learn more about how to use mocks managed by Microcks.\nFirst, let\u0026rsquo;s have a look at the summary page presenting an API or Service managed by Microcks. This summary page contains three sections related to different parts of the API/Service :","tags":null,"title":"Using exposed mocks","type":"documentation","url":"/documentation/using/mocks/","weight":30,"wordcount":810},{"authors":null,"categories":null,"date":1669075200,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":1669075200,"objectID":"f0b88402adcd8d306431149ecb4700d7","permalink":"https://microcks.io/documentation/installing/docker-desktop-extension/","publishdate":"2022-11-22T00:00:00Z","readingtime":1,"relpermalink":"/documentation/installing/docker-desktop-extension/","section":"documentation","summary":"Docker Desktop is a simple-to-install application for Mac, Windows, or Linux that allows you to create and share containerized applications and microservices. Docker Desktop includes the Docker Engine, the Docker CLI client, Docker Compose, Docker Content Trust, Kubernetes, and the Credential Helper.\nUsage To get started, make sure you have Docker Desktop installed on your system.\n  Select Extensions\n  Choose Microcks, install and launch it and you are ready to go 🤩","tags":null,"title":"Installing as Docker Desktop Extension","type":"documentation","url":"/documentation/installing/docker-desktop-extension/","weight":31,"wordcount":147},{"authors":null,"categories":null,"date":1675036800,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1675036800,"objectID":"c0f537c105d263c35f15b70b554f2ac0","permalink":"https://microcks.io/documentation/guides/nats-support/","publishdate":"2023-01-30T00:00:00Z","readingtime":6,"relpermalink":"/documentation/guides/nats-support/","section":"documentation","summary":"Overview This guide is a walkthrough on how to use a NATS protocol with Microcks. NATS is a Cloud Native, Open Source and High-performance Messaging technology. It is a single technology that enables applications to securely communicate across any combination of cloud vendors, on-premise, edge, web and mobile, and devices. Client APIs are provided in over 40 languages and frameworks and you can check out the full list of clients.","tags":null,"title":"NATS Mocking and Testing","type":"documentation","url":"/documentation/guides/nats-support/","weight":40,"wordcount":1273},{"authors":null,"categories":null,"date":1669075200,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1669075200,"objectID":"77278df554a663a204f9a93674fec1fb","permalink":"https://microcks.io/documentation/guides/rabbitmq-support/","publishdate":"2022-11-22T00:00:00Z","readingtime":7,"relpermalink":"/documentation/guides/rabbitmq-support/","section":"documentation","summary":"Overview This guide is a walkthrough on how to use the RabbitMQ protocol with Microcks. RabbitMQ is one of the most popular open source message broker that is supporting different protocols and more specifically AMQP 0.9.1, RabbitMQ was originally developed for.\nStarting with the 1.5.1 release of Microcks, we support RabbitMQ/AMQP as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a RabbitMQ broker for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any RabbitMQ broker in your organization to check that flowing messages are compliant to the schema described within your specification.","tags":null,"title":"RabbitMQ Mocking and Testing","type":"documentation","url":"/documentation/guides/rabbitmq-support/","weight":40,"wordcount":1297},{"authors":null,"categories":null,"date":1607990400,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":1800,"keywords":null,"kind":"page","lang":"en","lastmod":1697068800,"objectID":"797ca4540bad16daccf071d7270443d8","permalink":"https://microcks.io/documentation/installing/deployment-options/","publishdate":"2020-12-15T00:00:00Z","readingtime":9,"relpermalink":"/documentation/installing/deployment-options/","section":"documentation","summary":"Introduction Now that you have looked at the different installation methods of Microcks, you may want to have a high-level view of its architecture and deployment options. This page will go through these topics, showing the different choices and options you may have depending on your target environment.\nHigh-level Architecture In its canonical form, Microcks architecture is made of 4 components which are:\n The Microcks main web application (also called webapp) that holds the UI resources as well as API endpoints, Its associated MongoDB database for holding your data such as the repository of APIs | Services and Tests, A Microcks Postman runtime (microcks-postman-runtime) that allows the execution of Postman Collection tests and calls back Microcks for storing results, A Keycloak instance that holds the authentication mechanisms and identity provider integration.","tags":null,"title":"Architecture and deployment options","type":"documentation","url":"/documentation/installing/deployment-options/","weight":40,"wordcount":1722},{"authors":null,"categories":null,"date":1573430400,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1625011200,"objectID":"9715a6b6cbf5324d2e414d1b74af2b82","permalink":"https://microcks.io/documentation/automating/tekton/","publishdate":"2019-11-11T00:00:00Z","readingtime":4,"relpermalink":"/documentation/automating/tekton/","section":"documentation","summary":"Microcks Tekton The Tekton Pipelines project provides Kubernetes-style resources for declaring CI/CD-style pipelines. Microcks makes use of its CLI undercover and provides some Tasks and exemple Pipelines with the /tekton folder of this repository. It also makes usage of Microcks Service Account so it\u0026rsquo;s defintely worth the read ;-)\nTekton Task The microcks-test-task.yaml resource holds a sample of a Tekton Task for testing with Microcks. You may remove default values for parameters or put your own here.","tags":null,"title":"Using Microcks from Tekton","type":"documentation","url":"/documentation/automating/tekton/","weight":40,"wordcount":771},{"authors":null,"categories":null,"date":1677110400,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1677110400,"objectID":"8893c2d0a767ec5aacaa602894a3bc9f","permalink":"https://microcks.io/documentation/using/har/","publishdate":"2023-02-23T00:00:00Z","readingtime":3,"relpermalink":"/documentation/using/har/","section":"documentation","summary":"Overview Introduction As the Microcks community is growing, we heard a lot of people capturing live traffic in order to re-inject this data into their OpenAPI or Postman Collection files and reuse them as mock definitions. During this process, they curate the recording list and have to develop/automate the transformation of their captured data to other formats. We\u0026rsquo;d like to ease their pain and propose a more straightforward way using HTTP Archive Format (HAR).","tags":null,"title":"Http Archive usage for Microcks","type":"documentation","url":"/documentation/using/har/","weight":41,"wordcount":548},{"authors":null,"categories":null,"date":1613692800,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1637539200,"objectID":"6a336e1b9b0620ea93bb951bb1efab0f","permalink":"https://microcks.io/documentation/automating/github-actions/","publishdate":"2021-02-19T00:00:00Z","readingtime":3,"relpermalink":"/documentation/automating/github-actions/","section":"documentation","summary":"Microcks GitHub Actions What is it? Microcks provides 2 GitHub Actions for interacting with a Microcks instance from your GitHub workflows:\n  The Microcks Import GitHub Action is a GitHub Action you may use in your Workflow to import a bunch of API artifacts in a Microcks installs. If test succeeds (ie. API endpoint is compliant with API contract in Microcks) the workflow is pursuing, if not it fails,","tags":null,"title":"Using Microcks from GitHub Actions","type":"documentation","url":"/documentation/automating/github-actions/","weight":41,"wordcount":484},{"authors":null,"categories":null,"date":1697068800,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":300,"keywords":null,"kind":"page","lang":"en","lastmod":1699920000,"objectID":"76059c931f7b868b090d0455f65036a3","permalink":"https://microcks.io/documentation/installing/running-uber/","publishdate":"2023-10-12T00:00:00Z","readingtime":2,"relpermalink":"/documentation/installing/running-uber/","section":"documentation","summary":"In order to support Inner Loop integration or Shift-Left scenarios, we\u0026rsquo;ve worked recently on a stripped down version of Microcks that makes embedding it in your development workflow, on a laptop, within your unit tests possible. This new distribution is called microcks-uber and provides the essential services in a single container as represented below:\n As the Uber distribution of Microcks is perfectly well-adapted for a quick evaluation, we don\u0026rsquo;t recommend running it in production!","tags":null,"title":"Running with Testcontainers","type":"documentation","url":"/documentation/installing/running-uber/","weight":50,"wordcount":272},{"authors":null,"categories":null,"date":1675814400,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1675814400,"objectID":"91f843b765d3c4380c879ba82f91661c","permalink":"https://microcks.io/documentation/guides/googlepubsub-support/","publishdate":"2023-02-08T00:00:00Z","readingtime":8,"relpermalink":"/documentation/guides/googlepubsub-support/","section":"documentation","summary":"Overview This guide is a walkthrough on how to use a Google Pub/Sub messaging service with Microcks. Pub/Sub is an asynchronous and scalable messaging service that decouples services producing messages from services processing those messages. Pub/Sub allows services to communicate asynchronously, with latencies on the order of 100 milliseconds.\nStarting with the 1.7.0 release of Microcks, we support Google Pub/Sub as a protocol binding for AsyncAPI. That means that Microcks is able to connect to a Google Pub/Sub service for publishing mock messages as soon as it receives a valid AsyncAPI Specification and to connect to any Google Pub/Sub broker provided that Google Cloud Platform to check that flowing messages are compliant to the schema described within your specification.","tags":null,"title":"Google Pub/Sub Mocking and Testing","type":"documentation","url":"/documentation/guides/googlepubsub-support/","weight":50,"wordcount":1699},{"authors":null,"categories":null,"date":1573430400,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"page","lang":"en","lastmod":1705190400,"objectID":"d6814355597880b5d87f973c348a038f","permalink":"https://microcks.io/documentation/automating/api/","publishdate":"2019-11-11T00:00:00Z","readingtime":1,"relpermalink":"/documentation/automating/api/","section":"documentation","summary":"Microcks own\u0026rsquo;s API As a tool focused on APIs, Microcks also offers its own API that allows you to query its datastore and control the import jobs and configuration objects. You may use this API from your automation tool to dynamically launch new tests, register new mocks or globally control your Microcks server configuration.\nThe Swagger-UI below allows you to browse and discover the various API endpoints.\nPrevious releases of the API definitions can be found in the GitHub repository.","tags":null,"title":"Microcks API","type":"documentation","url":"/documentation/automating/api/","weight":50,"wordcount":99},{"authors":null,"categories":null,"date":1686009600,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":2100,"keywords":null,"kind":"page","lang":"en","lastmod":1686009600,"objectID":"be37835de4eec6c98813002033a558da","permalink":"https://microcks.io/documentation/guides/aws-sqs-sns-support/","publishdate":"2023-06-06T00:00:00Z","readingtime":10,"relpermalink":"/documentation/guides/aws-sqs-sns-support/","section":"documentation","summary":"This guide is a walkthrough on how to use a Amazon SQS and Amazon SNS messaging services with Microcks. As those two services are very frequently used in combination, we decided to cover both of them in the same guide as principles and configuration are very similar. However, Microcks may provide mocking and testing services for SQS only and mocking and testing services for SNS only. You don\u0026rsquo;t have to use both to benefit from Microcks features.","tags":null,"title":"Amazon SQS/SNS Mocking and Testing","type":"documentation","url":"/documentation/guides/aws-sqs-sns-support/","weight":60,"wordcount":2013},{"authors":null,"categories":null,"date":1706054400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1706054400,"objectID":"","permalink":"https://microcks.io/categories/blog/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/blog/","section":"categories","summary":"","tags":null,"title":"blog","type":"categories","url":"/categories/blog/","weight":0,"wordcount":0},{"authors":null,"categories":null,"date":1706054400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1706054400,"objectID":"","permalink":"https://microcks.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"authors":null,"categories":["blog"],"date":1706054400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":2300,"keywords":null,"kind":"page","lang":"en","lastmod":1706054400,"objectID":"78a012424a3748272e70d4ba308c469b","permalink":"https://microcks.io/blog/extend-microcks-with-custom-libs/","publishdate":"2024-01-24T00:00:00Z","readingtime":11,"relpermalink":"/blog/extend-microcks-with-custom-libs/","section":"blog","summary":"With the recent Microcks 1.8.1 version, there’s an abundance of exciting enhancements, from improved OpenAPI references support to optimizations for seamless usage via Testcontainers. But, in my humble opinion, a standout feature demands your attention. Introduced in 1.8.0 (see #897) and now completed with 1.8.1 (see #966), Microcks brings forth a game-changer: extensibility. Discover how to tailor and customize behaviors with your code or library, elevating your Microcks experience to heights!","tags":null,"title":"Extend Microcks with custom libs and code","type":"blog","url":"/blog/extend-microcks-with-custom-libs/","weight":0,"wordcount":2210},{"authors":null,"categories":null,"date":1706054400,"description":"This is meta description","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1706054400,"objectID":"b0d8ccffb8d530bff08365a148a04ee6","permalink":"https://microcks.io/blog/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/blog/","section":"blog","summary":"dfdpoiko","tags":null,"title":"Microcks Blog","type":"blog","url":"/blog/","weight":0,"wordcount":1},{"authors":null,"categories":null,"date":1706054400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"home","lang":"en","lastmod":1706054400,"objectID":"","permalink":"https://microcks.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Microcks.io","type":"page","url":"/","weight":0,"wordcount":0},{"authors":null,"categories":["blog"],"date":1705536000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1705536000,"objectID":"b688d970b66906dc7d677909bf706475","permalink":"https://microcks.io/blog/microcks-1.8.1-release/","publishdate":"2024-01-18T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-1.8.1-release/","section":"blog","summary":"We are thrilled to start this New Year with a brand new Microcks release! Say hi to the 1.8.1 release of Microcks, the Open-source cloud-native tool for API Mocking and Testing 👏\nThis release embeds 54 resolved issues as we release an intermediary 1.8.1-M1 version to avoid some users waiting too much time. Here are the highlights of this release:\n OpenAPI complex structures support was asked to handle edge cases or organizations having a great maturity on OpenAPI, Uber/All-in-one architecture simplification was required to allow further enhancements in our Shift-Left strategy and Testcontainers support, Kubernetes deployments are now better managed with Helm enhancements, enabling greater customization for an enhanced GitOps approach!","tags":null,"title":"Microcks 1.8.1 release 🚀","type":"blog","url":"/blog/microcks-1.8.1-release/","weight":0,"wordcount":1177},{"authors":null,"categories":["releases"],"date":1705536000,"description":"","dir":"news/","expirydate":-62135596800,"fuzzywordcount":1100,"keywords":null,"kind":"section","lang":"en","lastmod":1705536000,"objectID":"a7a21b3f3b83812326338d2cd0c589ad","permalink":"https://microcks.io/news/","publishdate":"0001-01-01T00:00:00Z","readingtime":6,"relpermalink":"/news/","section":"news","summary":"Fresh Releases Microcks core 1.8.1 on 18 Jan 2024 We are thrilled to start this New Year with a brand new Microcks release! Say hi to the 1.8.1 release of Microcks, the Open-source cloud-native tool for API Mocking and Testing 👏\nThis release embeds 54 resolved issues as we release an intermediary 1.8.1-M1 version to avoid some users waiting too much time.\nCheck out our release notes!\nYou can also check GitHub milestone 1.","tags":null,"title":"News about Microcks","type":"news","url":"/news/","weight":0,"wordcount":1079},{"authors":null,"categories":null,"date":1705536000,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"term","lang":"en","lastmod":1705536000,"objectID":"","permalink":"https://microcks.io/categories/releases/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/releases/","section":"categories","summary":"","tags":null,"title":"releases","type":"categories","url":"/categories/releases/","weight":0,"wordcount":0},{"authors":null,"categories":["blog"],"date":1703721600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1703721600,"objectID":"d7147a533eaacc6544181e5cfc1694ca","permalink":"https://microcks.io/blog/microcks-on-kind/","publishdate":"2023-12-28T00:00:00Z","readingtime":7,"relpermalink":"/blog/microcks-on-kind/","section":"blog","summary":"I\u0026rsquo;m still on housekeeping duty! I went through my notes on installing Microcks on Kind and decided to refresh them. Network and Ingress configuration here is actually easier than in the Minikube setup.\nThis installation notes were ran on my Apple Mac book M2 but those steps would sensibly be the same on any Linux machine. Let\u0026rsquo;s go 🚀\nPreparation As a Mac user, I used brew to install kind. However, it is also available from several different package managers out there.","tags":null,"title":"Microcks on Kind 🚢","type":"blog","url":"/blog/microcks-on-kind/","weight":0,"wordcount":1314},{"authors":null,"categories":["blog"],"date":1703635200,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":2000,"keywords":null,"kind":"page","lang":"en","lastmod":1703635200,"objectID":"b6d6b036d84c29ba9d0ff8b0a39391a3","permalink":"https://microcks.io/blog/microcks-on-minikube/","publishdate":"2023-12-27T00:00:00Z","readingtime":9,"relpermalink":"/blog/microcks-on-minikube/","section":"blog","summary":"As we close the year, it\u0026rsquo;s a good time for some housekeeping! On this occasion, I found some installation notes that could be worth transforming into proper blog posts or documentation. I went through my notes on installing Microcks on Minikube and decided to refresh them. It also needed to be completed with detailed information that we usually take for granted and forget to mention - such as network and Ingress configuration.","tags":null,"title":"Microcks on Minikube 🧊","type":"blog","url":"/blog/microcks-on-minikube/","weight":0,"wordcount":1909},{"authors":null,"categories":null,"date":1698278400,"description":"","dir":"documentation/administrating/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1698278400,"objectID":"0f8649640244adf00c6fa9acbe169173","permalink":"https://microcks.io/documentation/administrating/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/documentation/administrating/","section":"documentation","summary":"Here below all the documentation pages related to Administration.","tags":null,"title":"Administrating","type":"documentation","url":"/documentation/administrating/","weight":0,"wordcount":9},{"authors":null,"categories":null,"date":1698278400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1705190400,"objectID":"","permalink":"https://microcks.io/documentation/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/documentation/","section":"documentation","summary":"","tags":null,"title":"Documentations","type":"documentation","url":"/documentation/","weight":0,"wordcount":0},{"authors":null,"categories":["blog"],"date":1697500800,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1697500800,"objectID":"3d4e97f2a232a6c11ab12379974a6760","permalink":"https://microcks.io/blog/microcks-1.8.0-release/","publishdate":"2023-10-17T00:00:00Z","readingtime":8,"relpermalink":"/blog/microcks-1.8.0-release/","section":"blog","summary":"As the seasons transition, we are excited to unveil the 1.8.0 release of Microcks, the CNCF\u0026rsquo;s open-source cloud-native tool for API Mocking and Testing, right on the cusp of winter! ❄️ 🚀\nWith 47 resolved issues and 5 external PR (from new contributors) - This new release brings you a wave of new features, including AI Copilot, support for HAR artifacts, OAuth2 secured endpoint testing, Microcks super light Uber image, Testcontainers official module, two developer-friendly buttons for easy interactions (Copy as curl command and Add to your CI/CD), and an enhanced contextual help.","tags":null,"title":"Microcks 1.8.0 release 🚀","type":"blog","url":"/blog/microcks-1.8.0-release/","weight":0,"wordcount":1633},{"authors":null,"categories":null,"date":1697068800,"description":"","dir":"documentation/installing/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1699920000,"objectID":"8f35a8638f3553f74adc4391ea89ae5f","permalink":"https://microcks.io/documentation/installing/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/documentation/installing/","section":"documentation","summary":"Here below all the documentation pages related to Installation.","tags":null,"title":"Installing","type":"documentation","url":"/documentation/installing/","weight":0,"wordcount":9},{"authors":null,"categories":["blog"],"date":1687824000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1687824000,"objectID":"8ce521f5954ac93313c13a54f8f5ca07","permalink":"https://microcks.io/blog/microcks-joining-cncf-sandbox/","publishdate":"2023-06-27T00:00:00Z","readingtime":2,"relpermalink":"/blog/microcks-joining-cncf-sandbox/","section":"blog","summary":"We are excited to announce that Microcks, the open-source API mocking and testing project, has been accepted as a Sandbox project by the Cloud Native Computing Foundation (CNCF).\nWe thank the CNCF Technical Oversight Committee (TOC) members for their validation and the TAG App Delivery team for their invaluable support during this process 🙏 Josh Gavant, Abigail (Abby) Bangser, Scott Rigby, Colin Griffin\u0026hellip;\n 👉 See our submission form and information for the full details.","tags":null,"title":"Microcks Joining CNCF as a Sandbox Project 🎉","type":"blog","url":"/blog/microcks-joining-cncf-sandbox/","weight":0,"wordcount":424},{"authors":null,"categories":["blog"],"date":1687305600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1687305600,"objectID":"3f4c52c22dac3b6e8dbffd81ad74916c","permalink":"https://microcks.io/blog/microcks-1.7.1-release/","publishdate":"2023-06-21T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-1.7.1-release/","section":"blog","summary":"The seasons follow one another and here’s a Microcks release just ready for summer ☀️. We’re proud to announce today the 1.7.1 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing.\nWith 37 resolved issues - our record for a minor release - this release is an illustration of how community-driven the roadmap is: Amazon SQS \u0026amp; SNS support and Specifications goodies as well as many enhancements came directly from user requests and contributions.","tags":null,"title":"Microcks 1.7.1 release 🚀","type":"blog","url":"/blog/microcks-1.7.1-release/","weight":0,"wordcount":1223},{"authors":null,"categories":["blog"],"date":1686787200,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1686787200,"objectID":"c11ada1734f74c526a0a27b58556c08b","permalink":"https://microcks.io/blog/docker-desktop-extension-0.2/","publishdate":"2023-06-15T00:00:00Z","readingtime":4,"relpermalink":"/blog/docker-desktop-extension-0.2/","section":"blog","summary":"We are very excited to announce the availability of Microcks Docker Desktop Extension 0.2.0! This new version of our popular extension includes exciting enhancements designed to simplify and streamline API mocking and testing processes. This release focused on improving the user experience and expanding the extension\u0026rsquo;s capabilities. We are also excited to announce that we are increasing the frequency of our releases to provide our users with more frequent updates and features.","tags":null,"title":"Introducing Microcks Docker Desktop Extension 0.2: Enhanced Features and Increased Cadence 🚀","type":"blog","url":"/blog/docker-desktop-extension-0.2/","weight":0,"wordcount":711},{"authors":null,"categories":null,"date":1686009600,"description":"","dir":"documentation/guides/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1686009600,"objectID":"66d9e4b77237334a4e79a4e43615e932","permalink":"https://microcks.io/documentation/guides/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/documentation/guides/","section":"documentation","summary":"Here below all the documentation pages related to Guides.","tags":null,"title":"Guides","type":"documentation","url":"/documentation/guides/","weight":0,"wordcount":9},{"authors":null,"categories":["blog"],"date":1684886400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1684886400,"objectID":"309cf0593b96ed8ce20f7306c452a6f7","permalink":"https://microcks.io/blog/join-adopters-list/","publishdate":"2023-05-24T00:00:00Z","readingtime":4,"relpermalink":"/blog/join-adopters-list/","section":"blog","summary":"Open source software has revolutionized the way enterprises develop and deploy their applications. It fosters collaboration, innovation, and cost-effectiveness, enabling organizations to build secure and robust solutions while leveraging the collective knowledge and expertise of a vast and diverse community.\nMicrocks, the Kubernetes-Native multi-protocol open source enterprise mocking and testing API solution, is an excellent example of the power of open source projects. In this blog post, we invite enterprises and community users to join the Microcks adopters list, showcasing their support for the project and contributing to its growth.","tags":null,"title":"Join the Microcks Adopters list and Empower the vibrant open source Community 🙌","type":"blog","url":"/blog/join-adopters-list/","weight":0,"wordcount":650},{"authors":null,"categories":["blog"],"date":1683849600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1683849600,"objectID":"ecda73d06373cb04008e2e018244d98f","permalink":"https://microcks.io/blog/backstage-integration-launch/","publishdate":"2023-05-12T00:00:00Z","readingtime":4,"relpermalink":"/blog/backstage-integration-launch/","section":"blog","summary":"Identifying and managing software assets has always been a challenge! It became more and more difficult these years with the blast of multi-cloud deployments and practices like microservices. Fortunately, Backstage comes to the rescue and tends to become a standard for developer portals. Today, we are excited to announce an integration between Microcks and Backstage to ease the management of API related assets.\nContributed to the CNCF by Spotify, Backstage is, according to their website:","tags":null,"title":"Microcks' Backstage integration to centralize all your APIs in a software catalog 🧩","type":"blog","url":"/blog/backstage-integration-launch/","weight":0,"wordcount":723},{"authors":null,"categories":["blog"],"date":1680566400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1680566400,"objectID":"f26a5bf667408fe471ae7b28f22ac488","permalink":"https://microcks.io/blog/jb-hunt-mock-it-till-you-make-it/","publishdate":"2023-04-04T00:00:00Z","readingtime":6,"relpermalink":"/blog/jb-hunt-mock-it-till-you-make-it/","section":"blog","summary":"Collaboration in the enterprise has many challenges which can become pitfalls and roadblocks that threaten to slow agile software development to a complete standstill. Here, I’ll share how Microcks helped the Engineering and Technology team overcome obstacles and accelerate development and delivery at J.B. Hunt Transport Services, Inc.\nAt J.B. Hunt, it’s common for multiple software engineering teams to work in parallel across domains and products to deliver new features for our award-winning J.","tags":null,"title":"J.B. Hunt: Mock It till You Make It with Microcks","type":"blog","url":"/blog/jb-hunt-mock-it-till-you-make-it/","weight":0,"wordcount":1114},{"authors":null,"categories":["blog"],"date":1680134400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1680134400,"objectID":"41bab8b42ac2ebdcfe5417fdef6483d4","permalink":"https://microcks.io/blog/microcks-1.7.0-release/","publishdate":"2023-03-30T00:00:00Z","readingtime":7,"relpermalink":"/blog/microcks-1.7.0-release/","section":"blog","summary":"The end of the winter season ☃️ is coming. But unlike our fellow hibernators 🐻, instead of living off stores of fat, our amazing community has worked hard on yet another Microcks release - yes, version 1.7.0 is out 👏\nIn a few words, here are the highlights of this new release:\n  Some new protocols \u0026amp; connectors, you asked for it so: NATS, Google PubSub, and Postman Workspace are now available,","tags":null,"title":"Microcks 1.7.0 release 🚀","type":"blog","url":"/blog/microcks-1.7.0-release/","weight":0,"wordcount":1451},{"authors":null,"categories":["blog"],"date":1679529600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1679529600,"objectID":"ea44eaf4d7340fb81051eb7d9f9ba64b","permalink":"https://microcks.io/blog/microcks-partners-with-postman/","publishdate":"2023-03-23T00:00:00Z","readingtime":3,"relpermalink":"/blog/microcks-partners-with-postman/","section":"blog","summary":"I’m feeling proud and honored to let you know that we’re partnering with Postman, the leading platform for API development, to define the future of multi-protocol API tooling 🚀\nFrom day one, Microcks had the vision of a multi-protocol API ecosystem due to the ubiquitous nature of API. This is especially true at the enterprise level where the technology strata are built over the years. This vision has been confirmed by our growing user base and community.","tags":null,"title":"Microcks partners with Postman to shape next-gen multi-protocol API tooling ⭐️","type":"blog","url":"/blog/microcks-partners-with-postman/","weight":0,"wordcount":589},{"authors":null,"categories":null,"date":1677110400,"description":"","dir":"documentation/using/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1702944000,"objectID":"3374354522f36796480b9d4ef3aa2657","permalink":"https://microcks.io/documentation/using/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/documentation/using/","section":"documentation","summary":"Here below all the documentation pages related to Usage.","tags":null,"title":"Using","type":"documentation","url":"/documentation/using/","weight":0,"wordcount":9},{"authors":null,"categories":["blog"],"date":1664150400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":600,"keywords":null,"kind":"page","lang":"en","lastmod":1664150400,"objectID":"ca883896fa4a333853488161c64a3247","permalink":"https://microcks.io/blog/docker-desktop-extension-launch/","publishdate":"2022-09-26T00:00:00Z","readingtime":3,"relpermalink":"/blog/docker-desktop-extension-launch/","section":"blog","summary":"We are excited to announce the release of Microcks' Docker Desktop Extension as we always love to support and improve the lives of our community members. 🎉\n It has never been simpler to set up and use Microcks on a laptop or from anywhere you need or want thanks to Docker Desktop Extension. 🙌\n Without further ado, let\u0026rsquo;s take a quick look at how it functions and what it adds.","tags":null,"title":"Microcks Docker Desktop Extension 🚀","type":"blog","url":"/blog/docker-desktop-extension-launch/","weight":0,"wordcount":501},{"authors":null,"categories":["blog"],"date":1663200000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1663200000,"objectID":"77f260d118d2633e61231d8997fb2bb5","permalink":"https://microcks.io/blog/microcks-1.6.0-release/","publishdate":"2022-09-15T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-1.6.0-release/","section":"blog","summary":"We are excited to announce the 1.6.0 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. It has been an intense summer time for us as the previous 1.5.2 is just 3 months old!\nWe’re now “back to work” and happy to release many features that were requested by our community! In a few words, here are the highlights of this new release:\n Governance is certainly a huge topic and you’ll see how Microcks can bring significant insights regarding the Tests Conformance of your API, Observability can be tightly linked to Governance as well and Microcks has new APIs to bring you functional and technical observability, And of course a lot more: Direct API concepts enhancements and a coming Docker Desktop extension among many others!","tags":null,"title":"Microcks 1.6.0 release 🚀","type":"blog","url":"/blog/microcks-1.6.0-release/","weight":0,"wordcount":1249},{"authors":null,"categories":["blog"],"date":1654128000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1654128000,"objectID":"91b8c01041a978f9a9ebdbfb96b6775d","permalink":"https://microcks.io/blog/microcks-1.5.2-release/","publishdate":"2022-06-02T00:00:00Z","readingtime":4,"relpermalink":"/blog/microcks-1.5.2-release/","section":"blog","summary":"We are delighted to announce the 1.5.2 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. This is mainly an “Enhancement release” pushing further the Microcks’ Hub and Marketplace we introduced a few weeks ago.\nIn our vision, the Hub will hold a central place that will allow Microcks users to easily reuse curated API Mocks \u0026amp; Test suites in a single click - but also to share and publish their own.","tags":null,"title":"Microcks 1.5.2 release 🚀","type":"blog","url":"/blog/microcks-1.5.2-release/","weight":0,"wordcount":707},{"authors":null,"categories":["blog"],"date":1652313600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"423a5bb449a4a6af8d90c6afd047154f","permalink":"https://microcks.io/blog/microcks-hub-announcement/","publishdate":"2022-05-12T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-hub-announcement/","section":"blog","summary":"We are very proud to announce the launch of Microcks’ community hub and free marketplace 👉 hub.microcks.io! This has been discussed and requested many times within our community and here we are 🙌\nThe goal of this new community website is to collect, curate and share API Mocks \u0026amp; Test suites for being installed and used within any Microcks instance in a single click.\n If like us you like craft beers, let’s do the analogy between this announcement 👉 freely sharing API Mocks and Test suites and a brew bar!","tags":null,"title":"Microcks’ hub and marketplace!","type":"blog","url":"/blog/microcks-hub-announcement/","weight":0,"wordcount":1181},{"authors":null,"categories":["blog"],"date":1649376000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1649376000,"objectID":"ce40d43894a3aa77cb710e494e4f74af","permalink":"https://microcks.io/blog/microcks-1.5.1-release/","publishdate":"2022-04-08T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-1.5.1-release/","section":"blog","summary":"We are proud to announce the 1.5.1 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. We considered it a minor release this time as it “just” brought a new protocol binding and a lot of enhancements!\nOnce again this release is an illustration of how community-driven the roadmap is: AMQP and Swagger v2 support as well as more enhancements came directly from user requests. So thanks a lot to those who helped push up a new release with significant features once again.","tags":null,"title":"Microcks 1.5.1 release 🚀","type":"blog","url":"/blog/microcks-1.5.1-release/","weight":0,"wordcount":1130},{"authors":null,"categories":["releases"],"date":1642464000,"description":"","dir":"news/","expirydate":-62135596800,"fuzzywordcount":1200,"keywords":null,"kind":"page","lang":"en","lastmod":1642464000,"objectID":"122b199dbd2e26298bb815c98c3f86e4","permalink":"https://microcks.io/news/history/","publishdate":"0001-01-01T00:00:00Z","readingtime":6,"relpermalink":"/news/history/","section":"news","summary":"Older Releases Microcks core 1.4.1 on 15 Oct 2021 We are thrilled to announce the 1.4.1 release that is another demonstration of the ability of Microcks to play on both sides with new Enterprise related features but also enhancement towards the Developer eXperience. Here are the highlighted changes of this release:\n The ability to have Repository multi-tenancy for better management of large-scaled repositories, The introduction of APIMetadata artifact for scaling labeling in Microcks, The support of all Async features on developer\u0026rsquo;s laptop through Docker-Compose, The introduction of Microcks extensions for OpenAPI and AsyncAPI specifications,  Check out our release notes!","tags":null,"title":"Historical Microcks release notes","type":"news","url":"/news/history/","weight":0,"wordcount":1185},{"authors":null,"categories":["blog"],"date":1642464000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1642464000,"objectID":"2c744cc34b00fc03a9405722d4f50cf0","permalink":"https://microcks.io/blog/microcks-1.5.0-release/","publishdate":"2022-01-18T00:00:00Z","readingtime":8,"relpermalink":"/blog/microcks-1.5.0-release/","section":"blog","summary":"We are excited to announce the 1.5.0 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. Just three months have passed after the previous iteration, and our supporters in the community helped us push up a new release with significant features once again. Thanks a lot to all of them 👏\nIn line with our mantra, this release is the evidence of our vision of a unique tool with a consistent approach for speeding up the delivery and governing the lifecycle of ALL kinds of APIs.","tags":null,"title":"Microcks 1.5.0 release 🚀","type":"blog","url":"/blog/microcks-1.5.0-release/","weight":0,"wordcount":1626},{"authors":null,"categories":["blog"],"date":1641513600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1641513600,"objectID":"8835d31c6fe20fde9655b7696bbe6379","permalink":"https://microcks.io/blog/graphql-features-what-to-expect/","publishdate":"2022-01-07T00:00:00Z","readingtime":7,"relpermalink":"/blog/graphql-features-what-to-expect/","section":"blog","summary":"In various 2021 reports, GraphQL has been spotted as one of the most exciting technologies to consider for APIs. It is a query language and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.","tags":null,"title":"GraphQL features in Microcks: what to expect?","type":"blog","url":"/blog/graphql-features-what-to-expect/","weight":0,"wordcount":1339},{"authors":null,"categories":["blog"],"date":1634256000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1400,"keywords":null,"kind":"page","lang":"en","lastmod":1634256000,"objectID":"13e575d56243fb55597ee5e256028186","permalink":"https://microcks.io/blog/microcks-1.4.1-release/","publishdate":"2021-10-15T00:00:00Z","readingtime":7,"relpermalink":"/blog/microcks-1.4.1-release/","section":"blog","summary":"We are thrilled to announce today the 1.4.1 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. This release is another demonstration of the ability of Microcks to play on both sides with new Enterprise related features but also enhancement towards the Developer eXperience.\nYou’ll see that we put a lot of effort (and love ❤️) into listening and implementing feedback and ideas from our community: the number of people that suggested, contributed or helped amplify Microcks reach in communities is huge!","tags":null,"title":"Microcks 1.4.1 release 🚀","type":"blog","url":"/blog/microcks-1.4.1-release/","weight":0,"wordcount":1310},{"authors":null,"categories":["blog"],"date":1630281600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1630281600,"objectID":"4d48d75e860a3ad0effc3521dc48b693","permalink":"https://microcks.io/blog/async-features-with-docker-compose/","publishdate":"2021-08-30T00:00:00Z","readingtime":7,"relpermalink":"/blog/async-features-with-docker-compose/","section":"blog","summary":"For some weeks now, many users from the Microcks community were asking for playing with AsyncAPI related features without having to setup a Minikube or a full Kubernetes instance. And Docker-Compose is the perfect match for that! We were at first reluctant as it is an additional configuration to support\u0026hellip; but developers experience FTW! 💪\nThis blog post is a detailed walkthrough on how to use Asynchronous related features with Docker-Compose using the new set of compose files shipped in Microcks master branch.","tags":null,"title":"Async Features with Docker Compose","type":"blog","url":"/blog/async-features-with-docker-compose/","weight":0,"wordcount":1401},{"authors":null,"categories":["blog"],"date":1625011200,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1300,"keywords":null,"kind":"page","lang":"en","lastmod":1625011200,"objectID":"a17da26239c44a4ce9fba3db0818b291","permalink":"https://microcks.io/blog/microcks-1.3.0-release/","publishdate":"2021-06-30T00:00:00Z","readingtime":6,"relpermalink":"/blog/microcks-1.3.0-release/","section":"blog","summary":"We are so proud and happy to share this new major and important Microcks release two months in advance based on our initial roadmap! Yes, this was yet another big challenge 🎉 Kudos to our community users and partners for supporting and pushing us to this momentum.\nNothing could have been done without all your feedback and contributions 👏\nSo why is this release so special? First, We always stay on our principles and we are still applying our mantra for supporting ALL kinds of APIs and being community driven.","tags":null,"title":"Microcks 1.3.0 release 🚀","type":"blog","url":"/blog/microcks-1.3.0-release/","weight":0,"wordcount":1267},{"authors":null,"categories":["blog"],"date":1620172800,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":800,"keywords":null,"kind":"page","lang":"en","lastmod":1620172800,"objectID":"656592a15686f86b502999e7f00364ef","permalink":"https://microcks.io/blog/microcks-1.2.1-release/","publishdate":"2021-05-05T00:00:00Z","readingtime":4,"relpermalink":"/blog/microcks-1.2.1-release/","section":"blog","summary":"We are very glad to announce today the 1.2.1 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. This is mainly an “Enhancement release” pushing further the features we introduced within the previous 1.2.0 release.\nWith this release, we are still applying our mantra for supporting ALL kinds of APIs and being community driven. Want some keywords on what’s in this 1.2.1 release? We’ve been working on OpenAPI v3.","tags":null,"title":"Microcks 1.2.1 release 🚀","type":"blog","url":"/blog/microcks-1.2.1-release/","weight":0,"wordcount":730},{"authors":null,"categories":["blog"],"date":1617321600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1617667200,"objectID":"a3a3eaf3f9d7f41ecb1758f4a39517d0","permalink":"https://microcks.io/blog/simulating-cloudevents-with-asyncapi/","publishdate":"2021-04-06T00:00:00Z","readingtime":8,"relpermalink":"/blog/simulating-cloudevents-with-asyncapi/","section":"blog","summary":"TL;DR: CloudEvents and AsyncAPI are complementary specifications that help define your Event Driven Architecture. Microcks allows simulation of CloudEvent to speed-up and ensure autonomy of development teams.\n  The rise of Event Driven Architecture (EDA) is a necessary evolution step towards cloud-native applications. Events are the ultimate weapon to decouple your microservices within your architecture. They are bringing great benefits like space and time decoupling, better resiliency and elasticity.","tags":null,"title":"Simulating CloudEvents with AsyncAPI and Microcks","type":"blog","url":"/blog/simulating-cloudevents-with-asyncapi/","weight":0,"wordcount":1615},{"authors":null,"categories":["blog"],"date":1614211200,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1614297600,"objectID":"b19f4990647287dcede0db1a5a1f4927","permalink":"https://microcks.io/blog/podman-compose-support/","publishdate":"2021-02-26T00:00:00Z","readingtime":3,"relpermalink":"/blog/podman-compose-support/","section":"blog","summary":"While Docker is still the #1 option for software packaging and installation on the developer laptop, Podman is gaining traction. Podman advertises itself as a drop-in replacement for Docker. Just put alias podman=docker and you would be good to go, they said 😉\nWhilst the reality is a bit more nuanced, we made the necessary adjustment to make it as simple. Today it is a pleasure to contribute back this adaptation to the Microcks community!","tags":null,"title":"Podman Compose support in Microcks","type":"blog","url":"/blog/podman-compose-support/","weight":0,"wordcount":485},{"authors":null,"categories":["blog"],"date":1613865600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1613865600,"objectID":"5bfdf34b78c1776f44a73d1cc7abaada","permalink":"https://microcks.io/blog/microcks-1.2.0-release/","publishdate":"2021-02-21T00:00:00Z","readingtime":5,"relpermalink":"/blog/microcks-1.2.0-release/","section":"blog","summary":"We are delighted to announce the 1.2.0 release of Microcks - the Open source Kubernetes-native tool for API Mocking and Testing. With this new release, we are pursuing further our vision of a unique tool and consistent approach for speeding up the delivery and governing the lifecycle of ALL kinds of APIs - whether synchronous or asynchronous.\nIn this release, we put a lot of effort (and love ❤️) into listening and implementing feedback and ideas from our community.","tags":null,"title":"Microcks 1.2.0 release 🚀","type":"blog","url":"/blog/microcks-1.2.0-release/","weight":0,"wordcount":989},{"authors":null,"categories":null,"date":1613692800,"description":"","dir":"documentation/automating/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":1705190400,"objectID":"10cc2a470fd89579fba51c6fa5efb3e7","permalink":"https://microcks.io/documentation/automating/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/documentation/automating/","section":"documentation","summary":"Here below all the documentation pages related to Automation.","tags":null,"title":"Automating","type":"documentation","url":"/documentation/automating/","weight":0,"wordcount":9},{"authors":null,"categories":["blog"],"date":1611792000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1500,"keywords":null,"kind":"page","lang":"en","lastmod":1611792000,"objectID":"5126cf2f8818dac35fae17ec17412a04","permalink":"https://microcks.io/blog/advanced-dispatching-constraints/","publishdate":"2021-01-28T00:00:00Z","readingtime":7,"relpermalink":"/blog/advanced-dispatching-constraints/","section":"blog","summary":"The purpose of this post is to explain the advanced dispatching and constraint features available when mocking a REST API using Microcks. As I recently went again through the documentation answering questions on our Zulip chat, I realized that all the pieces were present but we did not have any overall example showing how to use them!\nSo I setup this new example based on a real life use-case our community users have submitted.","tags":null,"title":"Advanced Dispatching and Constraints for mocks","type":"blog","url":"/blog/advanced-dispatching-constraints/","weight":0,"wordcount":1449},{"authors":null,"categories":["blog"],"date":1606953600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1607126400,"objectID":"b3529a8dafcb814095a90d587847927b","permalink":"https://microcks.io/blog/continuous-testing-all-your-apis/","publishdate":"2020-12-06T00:00:00Z","readingtime":5,"relpermalink":"/blog/continuous-testing-all-your-apis/","section":"blog","summary":"We talk a lot about asynchronous API lately at Microcks! We added many new innovative features taking advantage of the AsyncAPI specification. These are nice additions but we do not want them to hide the foundational essence of Microcks: offering you a consistent approach whatever the type of API. See our Why Microcks ? post for a refresher.\nWith this post we want to demonstrate how traditional REST API and event-based API can be used together and how Microcks can leverage your OpenAPI and AsyncAPI assets to ease the testing of scenarios involving both of them.","tags":null,"title":"Continuous Testing of ALL your APIs","type":"blog","url":"/blog/continuous-testing-all-your-apis/","weight":0,"wordcount":946},{"authors":null,"categories":["blog"],"date":1605830400,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1100,"keywords":null,"kind":"page","lang":"en","lastmod":1605830400,"objectID":"6e2e7363fe0bacd7b8be8a882cf8f862","permalink":"https://microcks.io/blog/integrating-in-apicurio-keycloak/","publishdate":"2020-11-20T00:00:00Z","readingtime":5,"relpermalink":"/blog/integrating-in-apicurio-keycloak/","section":"blog","summary":"Microcks is an amazing tool that helps developers mock their APIs seamlessly using OpenAPI specs. This makes it easy for distributed teams to develop complex micro-services without having to wait for full development cycles to complete, thus maximising team efficiencies.\nApicurio Studio is another great tool to start creating your API documentations via a fully integrated OpenAPI spec editor and adds features like ability to view your documentation live as teams collaborate and edit specs on the editor in real-time.","tags":null,"title":"Integrating Microcks into Apicurio Keycloak","type":"blog","url":"/blog/integrating-in-apicurio-keycloak/","weight":0,"wordcount":1039},{"authors":null,"categories":["blog"],"date":1605571200,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1605571200,"objectID":"f58f52cf45b669357927c6c984e6c8a2","permalink":"https://microcks.io/blog/apache-kafka-mocking-testing/","publishdate":"2020-11-17T00:00:00Z","readingtime":4,"relpermalink":"/blog/apache-kafka-mocking-testing/","section":"blog","summary":"We see Apache Kafka being more and more commonly used as an event backbone in new organizations everyday. This is irrefutable. And while there are challenges adopting new frameworks and paradigms for the apps using Kafka, there is also a critical need to govern events and speed-up delivery. To improve time-to-market, organizations need to be able to develop without waiting for the whole system to be up and running ; and they will need to validate that the components talking with Kafka will send or receive correct messages.","tags":null,"title":"Apache Kafka Mocking and Testing","type":"blog","url":"/blog/apache-kafka-mocking-testing/","weight":0,"wordcount":845},{"authors":null,"categories":["blog"],"date":1604880000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1604880000,"objectID":"4e955964029f6401eef86fd7beae6ac6","permalink":"https://microcks.io/blog/microcks-1.1.0-release/","publishdate":"2020-11-09T00:00:00Z","readingtime":5,"relpermalink":"/blog/microcks-1.1.0-release/","section":"blog","summary":"We are very thrilled to announce today Microcks 1.1.0 release — the Open source Kubernetes-native tool for API Mocking and Testing. What a ride it has been over the last months since 1.0.0 release and our announcement of AsyncAPI support !\nWe received a huge amount of positive feedback from our community including many newcomers. So we took the time to come back and explain where we are coming from and what is our project purpose: see the \u0026ldquo;Why Microcks ?","tags":null,"title":"Microcks 1.1.0 release 🚀","type":"blog","url":"/blog/microcks-1.1.0-release/","weight":0,"wordcount":859},{"authors":null,"categories":["blog"],"date":1603152000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1700,"keywords":null,"kind":"page","lang":"en","lastmod":1603152000,"objectID":"cc18d6fce6fdb171a62a7a3f86d42d75","permalink":"https://microcks.io/blog/why-microcks/","publishdate":"2020-10-20T00:00:00Z","readingtime":8,"relpermalink":"/blog/why-microcks/","section":"blog","summary":"Microcks recently reached a key milestone as we officially announced on Aug 11th 2020 the release of Microcks 1.0.0, being our first General Availability (GA) version. With it we deliver the promise of providing an enterprise-grade solution to speed up, secure and scale your API strategy for the digital era — whatever the type of services or API.\nAs we have received massive supportive feedback since August, we consider it a great opportunity to take some time to come back to the reasons why we started Microcks, especially for the newcomers.","tags":null,"title":"Why Microcks?","type":"blog","url":"/blog/why-microcks/","weight":0,"wordcount":1664},{"authors":null,"categories":["blog"],"date":1597104000,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":1000,"keywords":null,"kind":"page","lang":"en","lastmod":1597104000,"objectID":"74cc0f1ee02f7bf534c18bcbd514efd7","permalink":"https://microcks.io/blog/microcks-1.0.0-release/","publishdate":"2020-08-11T00:00:00Z","readingtime":5,"relpermalink":"/blog/microcks-1.0.0-release/","section":"blog","summary":"Today is a very special day as we launch Microcks 1.0.0 and as it materializes a vision we had 18 months ago when starting investing more time on what was just a fun side-project at that time. That vision was about building one simple, scalable and consolidating tool for all the Enterprise services mocking and testing needs — whatever the type of services or API: green-field or legacy. Today, Microcks is the only Open source Kubernetes native tool for API Mocking and Testing supporting REST APIs, SOAP WebServices and now asynchronous / event-driven APIs!","tags":null,"title":"Microcks 1.0.0 release 🚀","type":"blog","url":"/blog/microcks-1.0.0-release/","weight":0,"wordcount":917},{"authors":null,"categories":["blog"],"date":1593129600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":500,"keywords":null,"kind":"page","lang":"en","lastmod":1593129600,"objectID":"5e13f7c7ff11226b027a8d375840314c","permalink":"https://microcks.io/blog/install-microcks-on-aws/","publishdate":"2020-06-26T00:00:00Z","readingtime":2,"relpermalink":"/blog/install-microcks-on-aws/","section":"blog","summary":"Whilst we recommend installing Microcks on Kubernetes for easy management and enhanced capabilities, it can also be deployed onto a regular Virtual Machine. This post details how you can setup Microcks onto an AWS EC2 instance if you’re familiar with this environment and want a quick test drive. It takes something like 6–7 minutes to complete from end-to-end. It’s an illustration of official setup documentation.\nThis will give you a Microcks installation on an AWS EC2 instance running Ubuntu 18.","tags":null,"title":"Install Microcks on AWS for a test drive 🧪","type":"blog","url":"/blog/install-microcks-on-aws/","weight":0,"wordcount":401},{"authors":null,"categories":null,"date":1593043200,"description":"","dir":"resources/","expirydate":-62135596800,"fuzzywordcount":300,"keywords":null,"kind":"section","lang":"en","lastmod":1593043200,"objectID":"b19066f515b030ede8b37d7a9ead8692","permalink":"https://microcks.io/resources/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/resources/","section":"resources","summary":"Media resources  Logos and assets  Events Review recorded events where we presented and discussed Microcks:\n  (FR) Hashicorp Radio Interview Fevrier 2022 By Laurent Broudoux   OpenShift Coffee Break - Microcks: API testing into a microservices world By Laurent Broudoux    AsyncAPI Conf October 2021: AsyncAPI or CloudEvents? Both my Captain! By Laurent Broudoux   (FR) CloudNord Octobre 2021: Accélérer votre adoption EDA avec AsyncAPI \u0026 Microcks By Laurent Broudoux    Barcelona JUG April 2021: Web API Contract First : design, mock and test By C.","tags":null,"title":"Resources","type":"resources","url":"/resources/","weight":0,"wordcount":220},{"authors":null,"categories":["blog"],"date":1589673600,"description":"","dir":"blog/","expirydate":-62135596800,"fuzzywordcount":900,"keywords":null,"kind":"page","lang":"en","lastmod":1589673600,"objectID":"92b4ab5ab3378b348de192e037c45043","permalink":"https://microcks.io/blog/microcks-0.9.0-release/","publishdate":"2020-05-17T00:00:00Z","readingtime":5,"relpermalink":"/blog/microcks-0.9.0-release/","section":"blog","summary":"I am delighted to announce Microcks release 0.9.0 — the Open source Kubernetes native tool for API Mocking and Testing. This new version introduces a tremendous amount of enhancements and new features.\nBig thanks to our growing community for all the work done, the raised issues and the collected feedback during the last 5 months to make it possible.\nThis release was the preparation to become more Enterprise-grade, and we are glad that Microcks is in production in more and more medium to large organisations.","tags":null,"title":"Microcks 0.9.0 release 🚀","type":"blog","url":"/blog/microcks-0.9.0-release/","weight":0,"wordcount":896},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"resources/video/","expirydate":-62135596800,"fuzzywordcount":200,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"56b5ea001524e5b75fbbf61e890b649f","permalink":"https://microcks.io/resources/video/api-journey/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/resources/video/api-journey/","section":"resources","summary":"As API are now becoming mainstream, a lot of focus is put on development and API Gateways. However, this does not solve all the problems… People are still facing issues regarding versioning, pragmatic usage of contract-first approaches or governance! In order to be truly efficient delivering API, it’s the whole lifecycle that needs to be considered. In this hands-on lab, we’ll go through Red Hat’s approach for API development.","tags":null,"title":"An API Journey, from Mock to Deployment!","type":"resources","url":"/resources/video/api-journey/","weight":0,"wordcount":134},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"community/","expirydate":-62135596800,"fuzzywordcount":200,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"460964d71a5606848132aa51ae04f454","permalink":"https://microcks.io/community/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/community/","section":"community","summary":"We ❤️ community! Contributions and feedback in whatever form are always welcome, as long as they\u0026rsquo;re constructive!\nHere are some important links:\n Source code: GitHub organization Twitter: MicrocksIO on Twitter Chat: MicrocksIO chat on Zulip or GitHub Discussions  Community chat You can chat with the Microcks team and other users on the MicrocksIO chat on Zulip IM or using Discussions on GitHub. Use these channels to ask questions, request help from core team or experienced users.","tags":null,"title":"Community","type":"community","url":"/community/","weight":0,"wordcount":128},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"go-client/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"3474eecae6a2f668d70f1ae0861ed0e0","permalink":"https://microcks.io/go-client/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/go-client/","section":"go-client","summary":"","tags":null,"title":"Go client","type":"go-client","url":"/go-client/","weight":0,"wordcount":0},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"testcontainers-go/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"6d53c72db4c015b3fa19c91010ec7e5e","permalink":"https://microcks.io/testcontainers-go/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/testcontainers-go/","section":"testcontainers-go","summary":"","tags":null,"title":"Go client","type":"testcontainers-go","url":"/testcontainers-go/","weight":0,"wordcount":0},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"discord-invite/","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"dfb163c9c265d941e609cb51cfdeb85c","permalink":"https://microcks.io/discord-invite/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/discord-invite/","section":"discord-invite","summary":"","tags":null,"title":"Microcks Discord Invite","type":"discord-invite","url":"/discord-invite/","weight":0,"wordcount":0},{"authors":null,"categories":null,"date":-62135596800,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":100,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://microcks.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0}]